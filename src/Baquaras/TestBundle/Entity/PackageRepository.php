<?php

namespace Baquaras\TestBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * PackageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PackageRepository extends EntityRepository
{
	/*
	public function getListe($page=1, $maxperpage=20)
	{
	
		$q = $this->createQueryBuilder('p', 's')
		->join('p.statutQualif','s')
		->orderBy('p.nom', 'ASC');
	
		$q->setFirstResult(($page-1) * $maxperpage)
		->setMaxResults($maxperpage);
	
		return new Paginator($q);
	}
	*/
	
	public function countItemsPackages()
	{	
		/*
		return  $this->createQueryBuilder('id')
				->select('COUNT(id)')
				->getQuery()
				->getSingleScalarResult();
		//*/
		
		return  $this->createQueryBuilder('p', 's')
		->select('COUNT(p.id)')
		->join('p.statutQualif', 's')
		->WHERE('s.id IN(:value1, :value2, :value3, :value4, :value5, :value6, :value7, :value8, :value9, :value10)')
		->setParameter('value1',1)
		->setParameter('value2',2)
		->setParameter('value3',3)
		->setParameter('value4',4)
		->setParameter('value5',5)
		->setParameter('value6',12)
		->setParameter('value7',13)
		->setParameter('value8',14)
		->setParameter('value9',15)
		->setParameter('value10',16)
		->getQuery()
		->getSingleScalarResult();
	}
	
	public function pagination()
	{
		
	}
	/*
	
	public function querySuivreQualif($page, $maxPerPage)
	{
		echo 'oui';
		$builder = $this->createQueryBuilder('p', 's')
					->join('p.statutQualif', 's')
					->WHERE('s.libelle IN(:value1, :value2, :value3, :value4, :value5)')
					->setParameter('value1','Planifiée')
					->setParameter('value2','Pré-qualifiée')
					->setParameter('value3','Packaging')
					->setParameter('value4','Pré-production')
					->setParameter('value5','En production');
					
		
		
		$builder->setFirstResult(($page-1) * $maxPerPage)
				->setMaxResults($maxPerPage);
		return new Paginator($builder);
		
	}
	//*/
	public function querySuivreQualif($triSuiviQualif, $page, $maxPerPage=30)
	{
				
		switch($triSuiviQualif){
		
			case 'AZ':
				{
					$builder = $this->createQueryBuilder('p', 's', 'a')
							->join('p.statutQualif', 's')
							->join('p.application', 'a')
							->WHERE('s.id IN(:value1, :value2, :value3, :value4, :value5, :value6, :value7, :value8, :value9, :value10)')
							->setParameter('value1',1)
							->setParameter('value2',2)
							->setParameter('value3',3)
							->setParameter('value4',4)
							->setParameter('value5',5)
							->setParameter('value6',12)
							->setParameter('value7',13)
							->setParameter('value8',14)
							->setParameter('value9',15)
							->setParameter('value10',16)
							
							->orderBy('a.nom', 'ASC');
					
					$builder->setFirstResult(($page-1) * $maxPerPage)
							->setMaxResults($maxPerPage);
				
					
					return new Paginator($builder);
				}

				break;
		
		
			case 'ZA':
				{	
				
					$builder = $this->createQueryBuilder('p', 's', 'a')
							->join('p.statutQualif', 's')
							->join('p.application', 'a')
							->WHERE('s.id IN(:value1, :value2, :value3, :value4, :value5, :value6, :value7, :value8, :value9, :value10)')
							->setParameter('value1',1)
							->setParameter('value2',2)
							->setParameter('value3',3)
							->setParameter('value4',4)
							->setParameter('value5',5)
							->setParameter('value6',12)
							->setParameter('value7',13)
							->setParameter('value8',14)
							->setParameter('value9',15)
							->setParameter('value10',16)
							
							->orderBy('a.nom', 'DESC');
					
					$builder->setFirstResult(($page-1) * $maxPerPage)
							->setMaxResults($maxPerPage);
					
					
					return new Paginator($builder);
						
				}
				
				break;
				
			case 'Toutes':
				{
					$builder = $this->createQueryBuilder('p', 's', 'a')
							->join('p.statutQualif', 's')
							->join('p.application', 'a')
							->WHERE('s.id IN(:value1, :value2, :value3, :value4, :value5, :value6, :value7, :value8, :value9, :value10)')
							->setParameter('value1',1)
							->setParameter('value2',2)
							->setParameter('value3',3)
							->setParameter('value4',4)
							->setParameter('value5',5)
							->setParameter('value6',12)
							->setParameter('value7',13)
							->setParameter('value8',14)
							->setParameter('value9',15)
							->setParameter('value10',16);
							
					//return $builder->getQuery()->getResult();
					
					$builder->setFirstResult(($page-1) * $maxPerPage)
							->setMaxResults($maxPerPage);
					
					
					return new Paginator($builder);
					
				}
				
				break;
				
			case 'ascN':
				{ 
					$builder = $this->createQueryBuilder('p','a', 's', 'e' )
							->join( 'p.evolutionsStatut', 'e')
							->join('p.statutQualif', 's')
							->join('p.application', 'a')
							->WHERE('s.id IN(:value1, :value2, :value3, :value4, :value5, :value6, :value7, :value8, :value9, :value10)')
							->setParameter('value1',1)
							->setParameter('value2',2)
							->setParameter('value3',3)
							->setParameter('value4',4)
							->setParameter('value5',5)
							->setParameter('value6',12)
							->setParameter('value7',13)
							->setParameter('value8',14)
							->setParameter('value9',15)
							->setParameter('value10',16)
						
							->orderBy('e.dateModif', 'ASC');
				
				
					 $builder->setFirstResult(($page-1) * $maxPerPage)
					 		->setMaxResults($maxPerPage);
						 	
						 	
						 return new Paginator($builder);
					
				}
			
				break;
				
			case 'descN':
				{
					$builder = $this->createQueryBuilder('p','a', 's', 'e' )
					
							->join('p.evolutionsStatut', 'e')
							->join('p.statutQualif', 's')
							->join('p.application', 'a')
							->WHERE('s.id IN(:value1, :value2, :value3, :value4, :value5, :value6, :value7, :value8, :value9, :value10)')
							->setParameter('value1',1)
							->setParameter('value2',2)
							->setParameter('value3',3)
							->setParameter('value4',4)
							->setParameter('value5',5)
							->setParameter('value6',12)
							->setParameter('value7',13)
							->setParameter('value8',14)
							->setParameter('value9',15)
							->setParameter('value10',16)
						
							->orderBy('e.dateModif', 'DESC');
				
				
						 $builder->setFirstResult(($page-1) * $maxPerPage)
						 		->setMaxResults($maxPerPage);
							 	
							 	
						 return new Paginator($builder);
					
				}
				
					break;
				
			default:
					
					$builder = $this->createQueryBuilder('p', 's', 'a')
							
							->join('p.statutQualif', 's')
							->join('p.application', 'a')
							->WHERE('s.id IN(:value1, :value2, :value3, :value4, :value5, :value6, :value7, :value8, :value9, :value10) AND (a.nom LIKE :value11 OR LOWER(a.nom) LIKE LOWER(:value11))')
							->setParameter('value1',1)
							->setParameter('value2',2)
							->setParameter('value3',3)
							->setParameter('value4',4)
							->setParameter('value5',5)
							->setParameter('value6',12)
							->setParameter('value7',13)
							->setParameter('value8',14)
							->setParameter('value9',15)
							->setParameter('value10',16)
							->setParameter('value11',$triSuiviQualif.'%');
							
							
					$builder->setFirstResult(($page-1) * $maxPerPage)
							->setMaxResults($maxPerPage);
					
					
					return new Paginator($builder);
					
			}
		
	}
	
	
}
